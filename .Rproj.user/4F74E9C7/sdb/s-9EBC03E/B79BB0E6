{
    "collab_server" : "",
    "contents" : "---\ntitle: \"Opt_3_analysis_script\"\nauthor: \"moaraj\"\ndate: \"2/24/2017\"\noutput:\n  pdf_document: default\n  html_document: default\n---\n\n```{r setup, include=FALSE}\nknitr::opts_chunk$set(echo = TRUE)\n\nlibrary(dplyr)\nlibrary(reshape2)\nlibrary(ggplot2)\nlibrary(plyr)\nlibrary(readr)\nlibrary(tidyr)\nlibrary(vioplot)\n```\n\n\nDetach all the packes that are loaded from the CRAN\n```{r}\nlapply(paste('package:',names(sessionInfo()$otherPkgs),sep=\"\"),detach,character.only=TRUE,unload=TRUE)\n```\n\n\nImport Annotated Files, Tranposed, all commas, spaces and semi colons removed in notepad++. \nINSERT The metab data catagories in the to first row\n\n```{r}\nData_Curated_Annotations <- read.csv(file = \"moaraj_opt_3.csv\")\nData_Curated_Annotations_transpose <- read.csv(file = \"moaraj_opt_3_transpose.csv\")\n\nmetab_data <- Data_Curated_Annotations_transpose\nmetab_data_names <- c(\"Index\", \"Extraction\", \"Mouse\", \"Strain\", \"Diet\", \"Sex\", \n                      as.character(Data_Curated_Annotations$name))\n\nnames(metab_data) <- metab_data_names\nmetab_data <- metab_data[-which(duplicated(names(metab_data)))]\n\nmetab_data <- metab_data %>% \n  dplyr::mutate_each_(., funs = funs(as.factor), \n                      vars = c(\"Index\", \"Extraction\", \"Mouse\", \"Strain\", \"Diet\", \"Sex\")) \n```\n\n\nAdd indexes for replicaites using the mod function on the sample index\n```{r}\nmetab_data <- merge(metab_data %>% mutate(replicate  = paste(\"rep_\", rep(c(1,2), times = dim(metab_data)[1]/2), sep = \"\")) %>% select(Index, replicate), metab_data, by = \"Index\")\n#zou need to have unqiue values in the bz mere\n#can be done by selecting multiple columns\n```\n\n\n\n```{r}\n#pdf(file = \"TIC_Summary_Statistics.pdf\")\n\nstrain_box_TIC <- ggplot(data = metab_data, aes(x = metab_data$Strain, \n                                   y = rowMeans(metab_data[,8:ncol(metab_data)])))\nstrain_box_TIC + geom_point() + geom_boxplot(outlier.color = \"red\") \nggsave(\"strain_box_TIC.pdf\", width = 16, height = 9, dpi = 200) \n\n\n\nmouse_box_TIC <- ggplot(data = metab_data, aes(x = metab_data$Mouse, \n                                   y = rowMeans(metab_data[,8:ncol(metab_data)])))\nmouse_box_TIC + geom_point() + geom_boxplot(outlier.color = \"red\")\nggsave(\"mouse_box_TIC.pdf\", width = 16, height = 9, dpi = 200) \n\n\nrep_box_TIC <- ggplot(data = metab_data, aes(x = metab_data$replicate, \n                                   y = rowMeans(metab_data[,8:ncol(metab_data)])))\nrep_box_TIC + geom_point() + geom_boxplot(outlier.color = \"red\")\nggsave(\"rep_box_TIC.pdf\", width = 16, height = 9, dpi = 200) \n\n\n\nblank_data <- filter(metab_data, Mouse == \"Blank\")\nblank_data_filtered <- blank_data[,8:length(blank_data)]\nblank_data_index <- 1:ncol(blank_data_filtered)\n\n\nTIC_Blank <- ggplot(melt(blank_data), aes(x=variable, y=value, col=Mouse)) \nTIC_Blank + geom_boxplot() + theme(axis.text.x=element_text(angle=90, hjust=1)) \nggsave(\"TIC_Blank_.pdf\", width = 30, height = 10, dpi = 200) \n\n\nTIC_Blank <- NULL\nTIC_Blank <- ggplot(melt(blank_data), aes(x=variable, y= log(value), col=Mouse)) \nTIC_Blank + geom_boxplot() + theme(axis.text.x=element_text(angle=90, hjust=1)) \nggsave(\"TIC_Blank_log.pdf\", width = 30, height = 10, dpi = 200) \n\nTIC_all_mice <- NULL\nTIC_all_mice <- ggplot(melt(metab_data), aes(x=variable, y=value, col=Mouse)) \nTIC_all_mice + geom_point() + theme(axis.text.x=element_text(angle=90, hjust=1)) \nggsave(\"TIC_all_mice_point.pdf\", width = 30, height = 10, dpi = 200)\n\nTIC_all_mice <- NULL\nTIC_all_mice <- ggplot(melt(metab_data), aes(x=variable, y=log(value), col=Mouse)) \nTIC_all_mice + geom_point() + theme(axis.text.x=element_text(angle=90, hjust=1)) \nggsave(\"TIC_all_mice_point_log.pdf\", width = 30, height = 10, dpi = 200) \n\n\n\n#dev.off()\n\n```\n\n```{r}\n\n\nblank_rank <- blank_data\nblank_rank$rowMeans <- (rowMeans(blank_data[8:ncol(blank_data)]))\nplot(sort(blank_rank$rowMeans))\n\nmetab_rank <- filter(metab_data, Mouse != \"Blank\")\n\nblank_col_rank <- colMeans(blank_data[8:ncol(blank_data)])[1:300]\nmetab_col_rank <- colMeans(metab_data[8:ncol(metab_data)])[1:300]\naverage_col_error <- sqrt((metab_col_rank - blank_col_rank)^2)\n\nError_data <- cbind(blank_col_rank, metab_col_rank)\nError_data_melt <- melt(Error_data)\n\npdf(file = \"ion_current.pdf\", width = 5, height = 5)\nplot(sort(metabj_col_rank), type = \"l\", log = \"y\", \n     #main = \"Average Metabolite ION Currents\", \n     xlab = \"Metabolite Number\",\n     ylab = \"Ion Current a.u\")\n  \n    lines(sort(blank_col_rank), col = \"red\", type = \"l\")\n    lines(sort(   sqrt((metab_col_rank[-301] - blank_col_rank)^2)   ), type = \"l\", col = \"blue\")\ndev.off()\n\n\nError_Plot <- ggplot(Error_data_melt, \n              aes(x = c(1:300, 1:300),\n                  y=(sort(value)), \n                  col=Var2)) + annotation_logticks()\n\nError_Plot + geom_point()\n\n\n\n\n```\n\n\n\n\n\n",
    "created" : 1487974788195.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2066749305",
    "id" : "B79BB0E6",
    "lastKnownWriteTime" : 1488211973,
    "last_content_update" : 1488211973715,
    "path" : "~/Dropbox/Aging BXD Study/D _ Metabolomics/D _ Protocol Optimization 3/Extraction_analysis.Rmd",
    "project_path" : "Extraction_analysis.Rmd",
    "properties" : {
        "chunk_output_type" : "console",
        "last_setup_crc32" : "",
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_markdown"
}